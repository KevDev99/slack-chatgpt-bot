const {
  dbInstallation,
} = require("../../database/models/installationModel.js");

const appHomeOpened = async ({ event, client, logger }) => {
  try {

    if (!event.view) return;

    const teamId = event.view.app_installed_team_id;

    // get installation
    const installation = await dbInstallation.findOne({ _id: teamId });

    const blocks = unconnectedInstanceBody(event.user);

    await client.views.publish({
      // Use the user ID associated with the event
      user_id: event.user,
      view: {
        // Home tabs must be enabled in your app configuration page under "App Home"
        type: "home",
        blocks,
      },
    });
  } catch (err) {
    console.error(err);
  }
};

const unconnectedInstanceBody = (userId) => {
  return [
    {
      type: "section",
      text: {
        type: "mrkdwn",
        text: `Welcome <@${userId}> ! A few things must be configured to get started.`,
      },
    },
    {
      type: "divider",
    },
    {
      type: "header",
      text: {
        type: "plain_text",
        text: "Prepare your ServiceNow instance",
        emoji: true,
      },
    },
    {
      type: "section",
      text: {
        type: "mrkdwn",
        text: "In order to use this app, OAuth must be activated on your ServiceNow instance. If it is not, please activate it following this ServiceNow documentation before proceeding.",
      },
    },
    {
      type: "section",
      text: {
        type: "mrkdwn",
        text: "*1.* Create an *OAuth API endpoint* for external clients following this <https://docs.servicenow.com/bundle/paris-platform-administration/page/administer/security/task/t_CreateEndpointforExternalClients.html|ServiceNow documentation.>",
      },
    },
    {
      type: "section",
      text: {
        type: "mrkdwn",
        text: "*2.* Take note of the *Client ID* and *Client Secret* generated by ServiceNow for the step below.",
      },
    },

    {
      type: "divider",
    },
    {
      type: "header",
      text: {
        type: "plain_text",
        text: "Connect your ServiceNow instance to Slack",
        emoji: true,
      },
    },
    {
      type: "section",
      text: {
        type: "mrkdwn",
        text: "Use the OAuth Client ID and Client Secret you generated in ServiceNow to connect ServiceNow to Slack.",
      },
    },
    {
      type: "actions",
      elements: [
        {
          type: "button",
          text: {
            type: "plain_text",
            text: "Connect ServiceNow to Slack",
            emoji: true,
          },
          value: "connect_servicenow_btn",
          action_id: "open_connect_servicenow",
        },
      ],
    },
  ];
};

const connectedInstanceBody = (userId) => {
  
}

module.exports = appHomeOpened;
